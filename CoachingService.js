function getLatestCoachingReport() {
  Logger.log('--- ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á getLatestCoachingReport ---');
  try {
    const userEmail = Session.getActiveUser().getEmail();
    Logger.log('1. ‡∏î‡∏∂‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ' + userEmail);

    const sheet = SpreadsheetApp.openById(SPREADSHEET_ID).getSheetByName('Daily_Coaching_Reports');
    if (!sheet) {
      Logger.log('!!! ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡∏µ‡∏ó "Daily_Coaching_Reports"');
      throw new Error('Sheet "Daily_Coaching_Reports" not found.');
    }
    Logger.log('2. ‡πÄ‡∏õ‡∏¥‡∏î‡∏ä‡∏µ‡∏ó‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');

    const values = sheet.getDataRange().getValues();
    const headers = values[0];
    Logger.log('3. ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å‡∏ä‡∏µ‡∏ó‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');

    const reportContentIndex = headers.indexOf('Report_Content');
    const userIdIndex = headers.indexOf('User_ID');
    const reportDateIndex = headers.indexOf('Report_Date');

    if (userIdIndex === -1 || reportContentIndex === -1 || reportDateIndex === -1) {
      Logger.log('!!! ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ô‡∏ä‡∏µ‡∏ó');
      throw new Error('Required columns not found in sheet.');
    }

    const userReports = values.slice(1)
      .filter(row => row[userIdIndex] === userEmail)
      .sort((a, b) => new Date(b[reportDateIndex]) - new Date(a[reportDateIndex]));
    
    Logger.log('4. ‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏≤ report ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡∏û‡∏ö ' + userReports.length + ' ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£');

    if (userReports.length > 0) {
      Logger.log('5. ‡∏û‡∏ö report ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏∞‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ');
      return userReports[0][reportContentIndex];
    } else {
      Logger.log('5. ‡πÑ‡∏°‡πà‡∏û‡∏ö report ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ô‡∏µ‡πâ');
      return '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Co-pilot Insights ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ';
    }
  } catch (error) {
    Logger.log('!!! ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏ö‡∏•‡πá‡∏≠‡∏Å CATCH: ' + error.toString());
    console.error('Error in getLatestCoachingReport: ' + error.toString());
    return `‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: ${error.message}`;
  }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô addSampleCoachingReport ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
function addSampleCoachingReport() {
  const userEmail = Session.getActiveUser().getEmail();
  const sheet = SpreadsheetApp.openById(SPREADSHEET_ID).getSheetByName('Daily_Coaching_Reports');
  if (!sheet) {
    console.error('Sheet "Daily_Coaching_Reports" not found.');
    return;
  }
  const newReport = [ `Report_${Date.now()}`, userEmail, new Date(), `### ‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì üöÄ\n\n* **Project ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ö‡πà‡∏≠‡∏¢:** DeNote2508\n* **‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:** ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏î‡∏µ‡∏°‡∏≤‡∏Å!` ];
  sheet.appendRow(newReport);
  console.log('Added a sample report for ' + userEmail);
}